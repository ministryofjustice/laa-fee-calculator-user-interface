name: build-test-deploy-nonprod

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
            node-version: 14.17.0

      - name: Prepare Rails
        run: bundle exec rails assets:precompile

      - name: Run tests
        run: bundle exec rspec

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assume Cloud Platform role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Login to Container Repository
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build and Push Docker image to ECR
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.event.pull_request.head.sha }}

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: Development
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assume Cloud Platform role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Login to Container Repository
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Authenticate to cluster
        env:
          KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
          kubectl config use-context ${KUBE_CLUSTER}

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Deploy to Dev
        run: |
          helm upgrade laa-fee-calculator-ui-dev ./laa-fee-calculator-user-interface/. \
              --install --wait --force --debug \
              --namespace=${{ secrets.KUBE_NAMESPACE }} \
              --values ./laa-fee-calculator-user-interface/values-dev.yaml \
              --set image.registry="${{ steps.login-ecr.outputs.registry }}" \
              --set image.repository="${{ vars.ECR_REPOSITORY }}" \
              --set image.tag="${{ github.event.pull_request.head.sha }}" \
              --atomic