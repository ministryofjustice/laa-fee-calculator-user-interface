name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - setup_cloud

env:
  KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
          id-token: write # This is required for requesting the JWT in assume ecr role
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: docker build -t fee-calculator-ui .
      # Assume role in Cloud Platform
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.DEV_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.DEV_ECR_REGION }}
      # Login to container repository
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
      # Build and push a Docker image to the container repository
      - run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.DEV_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
  deploy-dev:
    runs-on: ubuntu-latest
    environment: Development
    needs: build-and-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update image tag
        env:
          ECR_URL: ${{ secrets.ECR_URL }}
        run: export IMAGE_TAG=${{ github.sha }} && cat .k8s/dev/deployment.tpl | envsubst > deployment.yaml
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply the updated manifest
        run: |
          kubectl -n ${KUBE_NAMESPACE} apply -f deployment.yaml
  deploy-staging:
    runs-on: ubuntu-latest
    environment: Staging
    needs: build-and-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update image tag
        env:
          ECR_URL: ${{ secrets.ECR_URL }}
        run: export IMAGE_TAG=${{ github.sha }} && cat .k8s/dev/deployment.tpl | envsubst > deployment.yaml
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=laa-fee-calculator-ui-staging
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply the updated manifest
        run: |
          kubectl -n laa-fee-calculator-ui-staging apply -f deployment.yaml
